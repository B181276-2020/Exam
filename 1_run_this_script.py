#!/usr/bin/python3

#Synopsis:
#This is the interface with which the user will interact. From here the functions executing the key tasks of this project are called. It allows for user interaction and access to the features of this program.

import os, shutil
from functions import *
#Making directories needed:
os.system("clear")
if os.path.exists("Output_Data"):
	print ("")
else:
	os.mkdir("Output_Data")


#The user interface:
print ("\t\t\t\tUSER INTERFACE\t\t\t\n")
print("This is the interface where all functions of the program can be accessed. \nPlease select what you would like to do by typing the associated number of the program and pressing enter.\n")
run=input("""\nFUNCTIONALITIES:\n\n1. Search, create a Blast database and Blast\n
2.Move output files to Output_Data \n
3.Make a Blast database of a select file then Blast\n
EXIT OPTIONS:\n
4. Exit and take me to the output_data directory\n
5. Exit\n
""")

if run == "1":
	#Runs all functions and saves the most important user output to a file called search_info

	download_input = get_info()
	search_info =open("search_info","w")
	search_info.write(str(download_input))
	download(download_input)
	makedb(download_input)
	blasting(download_input)
	os.system("./1_run_this_script.py")

if run == "2":
	#Takes the file called search_info and takes the file name from it. Then moves all files starting with the file name to Output_Data
	search_info =open("search_info").read().replace("(","").replace(")","").replace("\'","").split(",")

	print (search_info)
	#Checks that there are files to move and if the search_info file has valid data
	if search_info[0] == "":
		print("No files to move. Press enter to return to the interface.")
		go = input("")
		os.system("./1_run_this_script.py")
	#Moves all files starting with the file name to the Output_Data directory
	else:
		print (search_info[0])
		files=search_info[0]+"*"
		print (files)
		os.system("mv "+files+" Output_Data") 
		print ("All files generated by the last iteration of option 1 were moved to the directory Output_Data. Please press enter to return to the interface.")
		go = input("") 
		os.system("./1_run_this_script.py")

if run == "3":
	#Runs adaptations of functions 3 and 4 to allow for flexible user input. However, these iterations are quite breakable and have little error trapping.
	print ("You have selected 3. To successfully execute this functionality, you will need a file containing \"Blastable\" data, preferably a fasta file.\nThe file will have to be within the current working directory\n")
	file_n = input("Please provide the name of the file you would like to Blast.\n")
	file_t = input("Please specify the type of file this is (i.e. fasta, gb ...)\n")
	dbblasting(file_n,file_t)

if run == "4":
	#Changes directories to the Output_Data directory and then lists the contents. Then exits
	os.system("ls -al")
	os.listdir(".")	
	exit()

if run == "5":
	#Exits interface
	exit()
	exit()
else:
	os.system("./1_run_this_script.py")


